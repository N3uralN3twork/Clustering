name: Update Dependencies

on:
  push:
    branches: [ main ]
    paths:
      - '**/*.cpp'
      - '**/*.hpp'
      - 'CMakeLists.txt'
      - 'vcpkg.json'
      - '.github/workflows/dependency-updates.yml'
  pull_request:
  workflow_dispatch:

jobs:
  build-and-report:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake git

      - name: Set up vcpkg
        run: |
          git clone --depth=1 https://github.com/microsoft/vcpkg "$GITHUB_WORKSPACE/vcpkg"
          "$GITHUB_WORKSPACE/vcpkg/bootstrap-vcpkg.sh"

      - name: Configure
        run: |
          cmake -S . -B build \
            -DCMAKE_TOOLCHAIN_FILE="$GITHUB_WORKSPACE/vcpkg/scripts/buildsystems/vcpkg.cmake" \
            -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release -j$(nproc)

      # ---- Dependency report section ----
      - name: Generate vcpkg baseline/upgrade report
        id: dep_report
        run: |
          set -eo pipefail
          echo "## Dependency Report" >> "$GITHUB_STEP_SUMMARY"

          if [ -f vcpkg.json ]; then
            BASELINE=$(jq -r '."builtin-baseline" // empty' vcpkg.json)
            if [ -n "$BASELINE" ]; then
              echo "**Manifest builtin-baseline:** \`$BASELINE\`" >> "$GITHUB_STEP_SUMMARY"
            fi
          fi

          echo "### Proposed baseline updates (dry run)" >> "$GITHUB_STEP_SUMMARY"
          { "$GITHUB_WORKSPACE/vcpkg/vcpkg" x-update-baseline --dry-run --x-manifest-root=. || true; } | tee vcpkg-baseline-dryrun.txt
          if [ -s vcpkg-baseline-dryrun.txt ]; then
            echo '\n````\n' >> "$GITHUB_STEP_SUMMARY" && cat vcpkg-baseline-dryrun.txt >> "$GITHUB_STEP_SUMMARY" && echo '\n````\n' >> "$GITHUB_STEP_SUMMARY"
          else
            echo "No baseline changes suggested (or command not supported by current vcpkg)." >> "$GITHUB_STEP_SUMMARY"
          fi

          echo "### Upgradeable packages (classic listing)" >> "$GITHUB_STEP_SUMMARY"
          { "$GITHUB_WORKSPACE/vcpkg/vcpkg" upgrade || true; } | tee vcpkg-upgrade.txt
          if [ -s vcpkg-upgrade.txt ]; then
            echo '\n````\n' >> "$GITHUB_STEP_SUMMARY" && cat vcpkg-upgrade.txt >> "$GITHUB_STEP_SUMMARY" && echo '\n````\n' >> "$GITHUB_STEP_SUMMARY"
          else
            echo "No upgradeable packages detected." >> "$GITHUB_STEP_SUMMARY"
          fi

          echo "### CMake configure status" >> "$GITHUB_STEP_SUMMARY"
          if [ "${{ steps.cmake_configure.outcome }}" != "success" ]; then
            echo "CMake configure failed; surfacing logs:" >> "$GITHUB_STEP_SUMMARY"
            if [ -f build/CMakeFiles/CMakeError.log ]; then
              tail -n 200 build/CMakeFiles/CMakeError.log | tee cmake-error-tail.txt
              echo '\n````\n' >> "$GITHUB_STEP_SUMMARY" && cat cmake-error-tail.txt >> "$GITHUB_STEP_SUMMARY" && echo '\n````\n' >> "$GITHUB_STEP_SUMMARY"
            fi
            if [ -f build/CMakeFiles/CMakeOutput.log ]; then
              tail -n 200 build/CMakeFiles/CMakeOutput.log | tee cmake-output-tail.txt
              echo '\n````\n' >> "$GITHUB_STEP_SUMMARY" && cat cmake-output-tail.txt >> "$GITHUB_STEP_SUMMARY" && echo '\n````\n' >> "$GITHUB_STEP_SUMMARY"
            fi
          else
            echo "CMake configure succeeded; no missing packages detected by CMake." >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: Upload dependency artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dependency-report
          path: |
            vcpkg-baseline-dryrun.txt
            vcpkg-upgrade.txt
            cmake-error-tail.txt
            cmake-output-tail.txt
          if-no-files-found: ignore
