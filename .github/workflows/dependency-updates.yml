name: dependency-updates

on:
  push:
    branches: [ main ]
    paths:
      - '**/*.cpp'
      - '**/*.hpp'
      - 'CMakeLists.txt'
      - 'vcpkg.json'
      - '.github/workflows/dependency-updates.yml'
  pull_request:
  workflow_dispatch:

jobs:
  build-mingw64:
    runs-on: windows-latest

    # Ensure all commands run inside the MSYS2 MINGW64 shell so MinGW is on PATH
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up MSYS2 (MINGW64)
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            git
            cmake
            make
            # Installs gcc/g++/ar/ld for 64-bit MinGW
            mingw-w64-x86_64-toolchain

      - name: Verify MinGW toolchain
        run: |
          which gcc || true
          which g++ || true
          gcc --version || true
          g++ --version || true
          which make || true

      - name: Set up vcpkg (manifest mode)
        run: |
          git clone --depth=1 https://github.com/microsoft/vcpkg "$GITHUB_WORKSPACE/vcpkg"
          "$GITHUB_WORKSPACE/vcpkg/bootstrap-vcpkg.sh"
          echo "VCPKG_ROOT=$GITHUB_WORKSPACE/vcpkg" >> $GITHUB_ENV

      - name: Configure (CMake + MinGW Makefiles + vcpkg)
        run: |
          cmake -S . -B build -G "MinGW Makefiles" \
            -DCMAKE_TOOLCHAIN_FILE="$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" \
            -DVCPKG_TARGET_TRIPLET=x64-mingw-dynamic \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_SH=CMAKE_SH-NOTFOUND
          echo "Selected C/CXX compilers:" && grep -E "^CMAKE_(C|CXX)_COMPILER:FILEPATH" build/CMakeCache.txt || true

      - name: Build
        run: cmake --build build --config Release -- -j2

      - name: (Optional) Run tests
        if: ${{ always() }}
        run: |
          cd build
          ctest --output-on-failure || true
